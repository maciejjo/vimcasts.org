<% wrap_layout :layout do %>
  <div class="row">
    <div class="small-12 columns">

      <%= partial "next-class" %>

      <header>
        <h2><%= current_page.title %></h2>
        <div class="episode_number">
          <small>#</small><%= current_page.data.number %>
        </div>
        <time pubdate="pubdate" datetime="<%= current_page.date.strftime('%Y-%m-%e') %>">
          <%= current_page.date.strftime('%b %e, %Y') %>
        </time>
        <div class="video-duration">
          <%# http://wiki.whatwg.org/wiki/Time_element#duration %>
          Run time: <time datetime="<%= minute_second_datetime(current_page.data.duration) %>">
            <%= minute_second(current_page.data.duration) %>
          </time>
        </div>
      </header>

      <%= current_page.summary %>

      <div id="video-placeholder">
        <img src='/images/posters/default.png'/>
      </div>

      <div class="show-for-small-only">
        <dl class="accordion" data-accordion>
          <dd>
          <a href="#shownotes">Shownotes</a>
          <div id="shownotes" class="content">
            <%= yield %>
          </div>
          </dd>
          <dd>
          <a href="#comments">Comments</a>
          <div id="comments" class="content">
            COMMENTS GO HERE
          </div>
          </dd>
        </dl>
      </div>


      <div>
        <hr/>
        <h3>Related content</h3>
        <ul class="small-block-grid-1 medium-block-grid-2 large-block-grid-3">
          <li>
          <h4><a href="/episodes/refining-search-patterns-with-the-command-line-window/">Refining search patterns with the command-line window</a></h4>
          <p>
          When you need to build a complex command, or devise a non-trivial search pattern, Vim’s command-line mode can be rather limiting. In this episode, I will introduce the command-line window, which allows you to use the full power of Vim when editing search queries and commands.
          </p>
          </li>
          <li>
          <h4><a href="/episodes/fugitive-vim-working-with-the-git-index/">Fugitive.vim - working with the git index</a></h4>
          <p>
          The fugitive plugin provides an interactive status window, where you can easily stage and review your changes for the next commit. The :Gdiff command visualizes the changes made to a file, by comparing the working copy with the index. In this episode, we’ll learn how to stage hunks of changes to the index without using the git add --patch command.
          </p>
          </li>
          <li>
          <h4><a href="/blog/2013/02/habit-breaking-habit-making/">Habit making, habit breaking</a></h4>
          <p>
          Moving your Vim cursor around using the arrow keys is a bad habit, and like many bad habits it’s a difficult one to break!
          </p>
          </li>
          <li>
          <h4><a href="/training">Vim Training</a></h4>
          <p>Boost your productivity with a <a href="/training">Vim training class</a>. Join a public class, or <a href="/training/private">book a private session</a> for your team.</p>
          </li>
          <li>
          <h4><a href="/publications">Publications</a></h4>
          <p>
          Make yourself a faster and more efficient developer with the help of <a href="/publications">these publications</a>.
          </p>
          </li>
          <li>
          <h4><a href="/categories">Find by category</a></h4>
          <p>
          Vimcasts contains
          <%= blog(:episodes).articles.count %> free screencasts and
          <%= blog(:blog).articles.count %> articles.
          <a href="/categories">Browse all content by category</a>.
          </p>
          </li>
        </ul>
      </div>

      <%= partial "footer-main" %>

    </div>
  </div>


<% end %>

